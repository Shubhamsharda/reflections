How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It showed me what was different in the new file, what typos i may have made 
    and then i took the corrective measures

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Because then i would not need to campare each time an error is made and 
    work would be done quickly.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: We can choose when when we sse fit that achange is made.
    It is more flexible and aloows better control.

    Cons: Sometimes a person may forget to make a comit then an automatic
    system comes in handy.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because in coding there may be multiple files related to a project and a 
    change in one file can cause changes in others too. Thus all the files
    comprising the project must be commited simultaneously.

How can you use the commands git log and git diff to view the history of files?

    git log gives us all the info about all the comits made in the document. git 
    diff gives us the difference between two commits using thier id's.

How might using version control make you more confident to make changes that
could break something?

    Because i can always come back o my old version of the program if i broke something.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
